// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/bank/v1beta1/genesis.proto

package com.cosmos.bank.v1beta1;

/**
 * <pre>
 * GenesisState defines the bank module's genesis state.
 * </pre>
 *
 * Protobuf type {@code cosmos.bank.v1beta1.GenesisState}
 */
public final class GenesisState extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:cosmos.bank.v1beta1.GenesisState)
    GenesisStateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GenesisState.newBuilder() to construct.
  private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GenesisState() {
    balances_ = java.util.Collections.emptyList();
    supply_ = java.util.Collections.emptyList();
    denomMetadata_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GenesisState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GenesisProto.internal_static_cosmos_bank_v1beta1_GenesisState_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GenesisProto.internal_static_cosmos_bank_v1beta1_GenesisState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GenesisState.class, Builder.class);
  }

  public static final int PARAMS_FIELD_NUMBER = 1;
  private Params params_;
  /**
   * <pre>
   * params defines all the paramaters of the module.
   * </pre>
   *
   * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return Whether the params field is set.
   */
  @Override
  public boolean hasParams() {
    return params_ != null;
  }
  /**
   * <pre>
   * params defines all the paramaters of the module.
   * </pre>
   *
   * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   * @return The params.
   */
  @Override
  public Params getParams() {
    return params_ == null ? Params.getDefaultInstance() : params_;
  }
  /**
   * <pre>
   * params defines all the paramaters of the module.
   * </pre>
   *
   * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public ParamsOrBuilder getParamsOrBuilder() {
    return params_ == null ? Params.getDefaultInstance() : params_;
  }

  public static final int BALANCES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<Balance> balances_;
  /**
   * <pre>
   * balances is an array containing the balances of all the accounts.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public java.util.List<Balance> getBalancesList() {
    return balances_;
  }
  /**
   * <pre>
   * balances is an array containing the balances of all the accounts.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public java.util.List<? extends BalanceOrBuilder>
      getBalancesOrBuilderList() {
    return balances_;
  }
  /**
   * <pre>
   * balances is an array containing the balances of all the accounts.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public int getBalancesCount() {
    return balances_.size();
  }
  /**
   * <pre>
   * balances is an array containing the balances of all the accounts.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public Balance getBalances(int index) {
    return balances_.get(index);
  }
  /**
   * <pre>
   * balances is an array containing the balances of all the accounts.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
   */
  @Override
  public BalanceOrBuilder getBalancesOrBuilder(
      int index) {
    return balances_.get(index);
  }

  public static final int SUPPLY_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.cosmos.base.v1beta1.Coin> supply_;
  /**
   * <pre>
   * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
   * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @Override
  public java.util.List<com.cosmos.base.v1beta1.Coin> getSupplyList() {
    return supply_;
  }
  /**
   * <pre>
   * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
   * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @Override
  public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
      getSupplyOrBuilderList() {
    return supply_;
  }
  /**
   * <pre>
   * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
   * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @Override
  public int getSupplyCount() {
    return supply_.size();
  }
  /**
   * <pre>
   * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
   * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @Override
  public com.cosmos.base.v1beta1.Coin getSupply(int index) {
    return supply_.get(index);
  }
  /**
   * <pre>
   * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
   * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
   * </pre>
   *
   * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
   */
  @Override
  public com.cosmos.base.v1beta1.CoinOrBuilder getSupplyOrBuilder(
      int index) {
    return supply_.get(index);
  }

  public static final int DENOM_METADATA_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<Metadata> denomMetadata_;
  /**
   * <pre>
   * denom_metadata defines the metadata of the differents coins.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
   */
  @Override
  public java.util.List<Metadata> getDenomMetadataList() {
    return denomMetadata_;
  }
  /**
   * <pre>
   * denom_metadata defines the metadata of the differents coins.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
   */
  @Override
  public java.util.List<? extends MetadataOrBuilder>
      getDenomMetadataOrBuilderList() {
    return denomMetadata_;
  }
  /**
   * <pre>
   * denom_metadata defines the metadata of the differents coins.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
   */
  @Override
  public int getDenomMetadataCount() {
    return denomMetadata_.size();
  }
  /**
   * <pre>
   * denom_metadata defines the metadata of the differents coins.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
   */
  @Override
  public Metadata getDenomMetadata(int index) {
    return denomMetadata_.get(index);
  }
  /**
   * <pre>
   * denom_metadata defines the metadata of the differents coins.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
   */
  @Override
  public MetadataOrBuilder getDenomMetadataOrBuilder(
      int index) {
    return denomMetadata_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (params_ != null) {
      output.writeMessage(1, getParams());
    }
    for (int i = 0; i < balances_.size(); i++) {
      output.writeMessage(2, balances_.get(i));
    }
    for (int i = 0; i < supply_.size(); i++) {
      output.writeMessage(3, supply_.get(i));
    }
    for (int i = 0; i < denomMetadata_.size(); i++) {
      output.writeMessage(4, denomMetadata_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (params_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getParams());
    }
    for (int i = 0; i < balances_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, balances_.get(i));
    }
    for (int i = 0; i < supply_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, supply_.get(i));
    }
    for (int i = 0; i < denomMetadata_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, denomMetadata_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GenesisState)) {
      return super.equals(obj);
    }
    GenesisState other = (GenesisState) obj;

    if (hasParams() != other.hasParams()) return false;
    if (hasParams()) {
      if (!getParams()
          .equals(other.getParams())) return false;
    }
    if (!getBalancesList()
        .equals(other.getBalancesList())) return false;
    if (!getSupplyList()
        .equals(other.getSupplyList())) return false;
    if (!getDenomMetadataList()
        .equals(other.getDenomMetadataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasParams()) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParams().hashCode();
    }
    if (getBalancesCount() > 0) {
      hash = (37 * hash) + BALANCES_FIELD_NUMBER;
      hash = (53 * hash) + getBalancesList().hashCode();
    }
    if (getSupplyCount() > 0) {
      hash = (37 * hash) + SUPPLY_FIELD_NUMBER;
      hash = (53 * hash) + getSupplyList().hashCode();
    }
    if (getDenomMetadataCount() > 0) {
      hash = (37 * hash) + DENOM_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getDenomMetadataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GenesisState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GenesisState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GenesisState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GenesisState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GenesisState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GenesisState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GenesisState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GenesisState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GenesisState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GenesisState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GenesisState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GenesisState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * GenesisState defines the bank module's genesis state.
   * </pre>
   *
   * Protobuf type {@code cosmos.bank.v1beta1.GenesisState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:cosmos.bank.v1beta1.GenesisState)
      GenesisStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GenesisProto.internal_static_cosmos_bank_v1beta1_GenesisState_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GenesisProto.internal_static_cosmos_bank_v1beta1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GenesisState.class, Builder.class);
    }

    // Construct using com.cosmos.bank.v1beta1.GenesisState.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      if (balancesBuilder_ == null) {
        balances_ = java.util.Collections.emptyList();
      } else {
        balances_ = null;
        balancesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (supplyBuilder_ == null) {
        supply_ = java.util.Collections.emptyList();
      } else {
        supply_ = null;
        supplyBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (denomMetadataBuilder_ == null) {
        denomMetadata_ = java.util.Collections.emptyList();
      } else {
        denomMetadata_ = null;
        denomMetadataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GenesisProto.internal_static_cosmos_bank_v1beta1_GenesisState_descriptor;
    }

    @Override
    public GenesisState getDefaultInstanceForType() {
      return GenesisState.getDefaultInstance();
    }

    @Override
    public GenesisState build() {
      GenesisState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public GenesisState buildPartial() {
      GenesisState result = new GenesisState(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(GenesisState result) {
      if (balancesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          balances_ = java.util.Collections.unmodifiableList(balances_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.balances_ = balances_;
      } else {
        result.balances_ = balancesBuilder_.build();
      }
      if (supplyBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          supply_ = java.util.Collections.unmodifiableList(supply_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.supply_ = supply_;
      } else {
        result.supply_ = supplyBuilder_.build();
      }
      if (denomMetadataBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          denomMetadata_ = java.util.Collections.unmodifiableList(denomMetadata_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.denomMetadata_ = denomMetadata_;
      } else {
        result.denomMetadata_ = denomMetadataBuilder_.build();
      }
    }

    private void buildPartial0(GenesisState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.params_ = paramsBuilder_ == null
            ? params_
            : paramsBuilder_.build();
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GenesisState) {
        return mergeFrom((GenesisState)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GenesisState other) {
      if (other == GenesisState.getDefaultInstance()) return this;
      if (other.hasParams()) {
        mergeParams(other.getParams());
      }
      if (balancesBuilder_ == null) {
        if (!other.balances_.isEmpty()) {
          if (balances_.isEmpty()) {
            balances_ = other.balances_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBalancesIsMutable();
            balances_.addAll(other.balances_);
          }
          onChanged();
        }
      } else {
        if (!other.balances_.isEmpty()) {
          if (balancesBuilder_.isEmpty()) {
            balancesBuilder_.dispose();
            balancesBuilder_ = null;
            balances_ = other.balances_;
            bitField0_ = (bitField0_ & ~0x00000002);
            balancesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBalancesFieldBuilder() : null;
          } else {
            balancesBuilder_.addAllMessages(other.balances_);
          }
        }
      }
      if (supplyBuilder_ == null) {
        if (!other.supply_.isEmpty()) {
          if (supply_.isEmpty()) {
            supply_ = other.supply_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSupplyIsMutable();
            supply_.addAll(other.supply_);
          }
          onChanged();
        }
      } else {
        if (!other.supply_.isEmpty()) {
          if (supplyBuilder_.isEmpty()) {
            supplyBuilder_.dispose();
            supplyBuilder_ = null;
            supply_ = other.supply_;
            bitField0_ = (bitField0_ & ~0x00000004);
            supplyBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSupplyFieldBuilder() : null;
          } else {
            supplyBuilder_.addAllMessages(other.supply_);
          }
        }
      }
      if (denomMetadataBuilder_ == null) {
        if (!other.denomMetadata_.isEmpty()) {
          if (denomMetadata_.isEmpty()) {
            denomMetadata_ = other.denomMetadata_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDenomMetadataIsMutable();
            denomMetadata_.addAll(other.denomMetadata_);
          }
          onChanged();
        }
      } else {
        if (!other.denomMetadata_.isEmpty()) {
          if (denomMetadataBuilder_.isEmpty()) {
            denomMetadataBuilder_.dispose();
            denomMetadataBuilder_ = null;
            denomMetadata_ = other.denomMetadata_;
            bitField0_ = (bitField0_ & ~0x00000008);
            denomMetadataBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDenomMetadataFieldBuilder() : null;
          } else {
            denomMetadataBuilder_.addAllMessages(other.denomMetadata_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              Balance m =
                  input.readMessage(
                      Balance.parser(),
                      extensionRegistry);
              if (balancesBuilder_ == null) {
                ensureBalancesIsMutable();
                balances_.add(m);
              } else {
                balancesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.cosmos.base.v1beta1.Coin m =
                  input.readMessage(
                      com.cosmos.base.v1beta1.Coin.parser(),
                      extensionRegistry);
              if (supplyBuilder_ == null) {
                ensureSupplyIsMutable();
                supply_.add(m);
              } else {
                supplyBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              Metadata m =
                  input.readMessage(
                      Metadata.parser(),
                      extensionRegistry);
              if (denomMetadataBuilder_ == null) {
                ensureDenomMetadataIsMutable();
                denomMetadata_.add(m);
              } else {
                denomMetadataBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Params params_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Params, Params.Builder, ParamsOrBuilder> paramsBuilder_;
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    public Params getParams() {
      if (paramsBuilder_ == null) {
        return params_ == null ? Params.getDefaultInstance() : params_;
      } else {
        return paramsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(Params value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
      } else {
        paramsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder setParams(
        Params.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        params_ = builderForValue.build();
      } else {
        paramsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder mergeParams(Params value) {
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          params_ != null &&
          params_ != Params.getDefaultInstance()) {
          getParamsBuilder().mergeFrom(value);
        } else {
          params_ = value;
        }
      } else {
        paramsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      params_ = null;
      if (paramsBuilder_ != null) {
        paramsBuilder_.dispose();
        paramsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public Params.Builder getParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getParamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    public ParamsOrBuilder getParamsOrBuilder() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilder();
      } else {
        return params_ == null ?
            Params.getDefaultInstance() : params_;
      }
    }
    /**
     * <pre>
     * params defines all the paramaters of the module.
     * </pre>
     *
     * <code>.cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Params, Params.Builder, ParamsOrBuilder>
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Params, Params.Builder, ParamsOrBuilder>(
                getParams(),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private java.util.List<Balance> balances_ =
      java.util.Collections.emptyList();
    private void ensureBalancesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        balances_ = new java.util.ArrayList<Balance>(balances_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Balance, Balance.Builder, BalanceOrBuilder> balancesBuilder_;

    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<Balance> getBalancesList() {
      if (balancesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(balances_);
      } else {
        return balancesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public int getBalancesCount() {
      if (balancesBuilder_ == null) {
        return balances_.size();
      } else {
        return balancesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Balance getBalances(int index) {
      if (balancesBuilder_ == null) {
        return balances_.get(index);
      } else {
        return balancesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder setBalances(
        int index, Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.set(index, value);
        onChanged();
      } else {
        balancesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder setBalances(
        int index, Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.set(index, builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder addBalances(Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.add(value);
        onChanged();
      } else {
        balancesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder addBalances(
        int index, Balance value) {
      if (balancesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancesIsMutable();
        balances_.add(index, value);
        onChanged();
      } else {
        balancesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder addBalances(
        Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.add(builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder addBalances(
        int index, Balance.Builder builderForValue) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.add(index, builderForValue.build());
        onChanged();
      } else {
        balancesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder addAllBalances(
        Iterable<? extends Balance> values) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, balances_);
        onChanged();
      } else {
        balancesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder clearBalances() {
      if (balancesBuilder_ == null) {
        balances_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        balancesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Builder removeBalances(int index) {
      if (balancesBuilder_ == null) {
        ensureBalancesIsMutable();
        balances_.remove(index);
        onChanged();
      } else {
        balancesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Balance.Builder getBalancesBuilder(
        int index) {
      return getBalancesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public BalanceOrBuilder getBalancesOrBuilder(
        int index) {
      if (balancesBuilder_ == null) {
        return balances_.get(index);  } else {
        return balancesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends BalanceOrBuilder>
         getBalancesOrBuilderList() {
      if (balancesBuilder_ != null) {
        return balancesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(balances_);
      }
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Balance.Builder addBalancesBuilder() {
      return getBalancesFieldBuilder().addBuilder(
          Balance.getDefaultInstance());
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public Balance.Builder addBalancesBuilder(
        int index) {
      return getBalancesFieldBuilder().addBuilder(
          index, Balance.getDefaultInstance());
    }
    /**
     * <pre>
     * balances is an array containing the balances of all the accounts.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false];</code>
     */
    public java.util.List<Balance.Builder>
         getBalancesBuilderList() {
      return getBalancesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Balance, Balance.Builder, BalanceOrBuilder>
        getBalancesFieldBuilder() {
      if (balancesBuilder_ == null) {
        balancesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Balance, Balance.Builder, BalanceOrBuilder>(
                balances_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        balances_ = null;
      }
      return balancesBuilder_;
    }

    private java.util.List<com.cosmos.base.v1beta1.Coin> supply_ =
      java.util.Collections.emptyList();
    private void ensureSupplyIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        supply_ = new java.util.ArrayList<com.cosmos.base.v1beta1.Coin>(supply_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> supplyBuilder_;

    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin> getSupplyList() {
      if (supplyBuilder_ == null) {
        return java.util.Collections.unmodifiableList(supply_);
      } else {
        return supplyBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public int getSupplyCount() {
      if (supplyBuilder_ == null) {
        return supply_.size();
      } else {
        return supplyBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin getSupply(int index) {
      if (supplyBuilder_ == null) {
        return supply_.get(index);
      } else {
        return supplyBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setSupply(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (supplyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSupplyIsMutable();
        supply_.set(index, value);
        onChanged();
      } else {
        supplyBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder setSupply(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (supplyBuilder_ == null) {
        ensureSupplyIsMutable();
        supply_.set(index, builderForValue.build());
        onChanged();
      } else {
        supplyBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addSupply(com.cosmos.base.v1beta1.Coin value) {
      if (supplyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSupplyIsMutable();
        supply_.add(value);
        onChanged();
      } else {
        supplyBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addSupply(
        int index, com.cosmos.base.v1beta1.Coin value) {
      if (supplyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSupplyIsMutable();
        supply_.add(index, value);
        onChanged();
      } else {
        supplyBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addSupply(
        com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (supplyBuilder_ == null) {
        ensureSupplyIsMutable();
        supply_.add(builderForValue.build());
        onChanged();
      } else {
        supplyBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addSupply(
        int index, com.cosmos.base.v1beta1.Coin.Builder builderForValue) {
      if (supplyBuilder_ == null) {
        ensureSupplyIsMutable();
        supply_.add(index, builderForValue.build());
        onChanged();
      } else {
        supplyBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder addAllSupply(
        Iterable<? extends com.cosmos.base.v1beta1.Coin> values) {
      if (supplyBuilder_ == null) {
        ensureSupplyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, supply_);
        onChanged();
      } else {
        supplyBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder clearSupply() {
      if (supplyBuilder_ == null) {
        supply_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        supplyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public Builder removeSupply(int index) {
      if (supplyBuilder_ == null) {
        ensureSupplyIsMutable();
        supply_.remove(index);
        onChanged();
      } else {
        supplyBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder getSupplyBuilder(
        int index) {
      return getSupplyFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.CoinOrBuilder getSupplyOrBuilder(
        int index) {
      if (supplyBuilder_ == null) {
        return supply_.get(index);  } else {
        return supplyBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<? extends com.cosmos.base.v1beta1.CoinOrBuilder> 
         getSupplyOrBuilderList() {
      if (supplyBuilder_ != null) {
        return supplyBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(supply_);
      }
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addSupplyBuilder() {
      return getSupplyFieldBuilder().addBuilder(
          com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public com.cosmos.base.v1beta1.Coin.Builder addSupplyBuilder(
        int index) {
      return getSupplyFieldBuilder().addBuilder(
          index, com.cosmos.base.v1beta1.Coin.getDefaultInstance());
    }
    /**
     * <pre>
     * supply represents the total supply. If it is left empty, then supply will be calculated based on the provided
     * balances. Otherwise, it will be used to validate that the sum of the balances equals this amount.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    public java.util.List<com.cosmos.base.v1beta1.Coin.Builder> 
         getSupplyBuilderList() {
      return getSupplyFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder> 
        getSupplyFieldBuilder() {
      if (supplyBuilder_ == null) {
        supplyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.cosmos.base.v1beta1.Coin, com.cosmos.base.v1beta1.Coin.Builder, com.cosmos.base.v1beta1.CoinOrBuilder>(
                supply_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        supply_ = null;
      }
      return supplyBuilder_;
    }

    private java.util.List<Metadata> denomMetadata_ =
      java.util.Collections.emptyList();
    private void ensureDenomMetadataIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        denomMetadata_ = new java.util.ArrayList<Metadata>(denomMetadata_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Metadata, Metadata.Builder, MetadataOrBuilder> denomMetadataBuilder_;

    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public java.util.List<Metadata> getDenomMetadataList() {
      if (denomMetadataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(denomMetadata_);
      } else {
        return denomMetadataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public int getDenomMetadataCount() {
      if (denomMetadataBuilder_ == null) {
        return denomMetadata_.size();
      } else {
        return denomMetadataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Metadata getDenomMetadata(int index) {
      if (denomMetadataBuilder_ == null) {
        return denomMetadata_.get(index);
      } else {
        return denomMetadataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder setDenomMetadata(
        int index, Metadata value) {
      if (denomMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDenomMetadataIsMutable();
        denomMetadata_.set(index, value);
        onChanged();
      } else {
        denomMetadataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder setDenomMetadata(
        int index, Metadata.Builder builderForValue) {
      if (denomMetadataBuilder_ == null) {
        ensureDenomMetadataIsMutable();
        denomMetadata_.set(index, builderForValue.build());
        onChanged();
      } else {
        denomMetadataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder addDenomMetadata(Metadata value) {
      if (denomMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDenomMetadataIsMutable();
        denomMetadata_.add(value);
        onChanged();
      } else {
        denomMetadataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder addDenomMetadata(
        int index, Metadata value) {
      if (denomMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDenomMetadataIsMutable();
        denomMetadata_.add(index, value);
        onChanged();
      } else {
        denomMetadataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder addDenomMetadata(
        Metadata.Builder builderForValue) {
      if (denomMetadataBuilder_ == null) {
        ensureDenomMetadataIsMutable();
        denomMetadata_.add(builderForValue.build());
        onChanged();
      } else {
        denomMetadataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder addDenomMetadata(
        int index, Metadata.Builder builderForValue) {
      if (denomMetadataBuilder_ == null) {
        ensureDenomMetadataIsMutable();
        denomMetadata_.add(index, builderForValue.build());
        onChanged();
      } else {
        denomMetadataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder addAllDenomMetadata(
        Iterable<? extends Metadata> values) {
      if (denomMetadataBuilder_ == null) {
        ensureDenomMetadataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, denomMetadata_);
        onChanged();
      } else {
        denomMetadataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder clearDenomMetadata() {
      if (denomMetadataBuilder_ == null) {
        denomMetadata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        denomMetadataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Builder removeDenomMetadata(int index) {
      if (denomMetadataBuilder_ == null) {
        ensureDenomMetadataIsMutable();
        denomMetadata_.remove(index);
        onChanged();
      } else {
        denomMetadataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Metadata.Builder getDenomMetadataBuilder(
        int index) {
      return getDenomMetadataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public MetadataOrBuilder getDenomMetadataOrBuilder(
        int index) {
      if (denomMetadataBuilder_ == null) {
        return denomMetadata_.get(index);  } else {
        return denomMetadataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public java.util.List<? extends MetadataOrBuilder>
         getDenomMetadataOrBuilderList() {
      if (denomMetadataBuilder_ != null) {
        return denomMetadataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(denomMetadata_);
      }
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Metadata.Builder addDenomMetadataBuilder() {
      return getDenomMetadataFieldBuilder().addBuilder(
          Metadata.getDefaultInstance());
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public Metadata.Builder addDenomMetadataBuilder(
        int index) {
      return getDenomMetadataFieldBuilder().addBuilder(
          index, Metadata.getDefaultInstance());
    }
    /**
     * <pre>
     * denom_metadata defines the metadata of the differents coins.
     * </pre>
     *
     * <code>repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"denom_metadata&#92;""];</code>
     */
    public java.util.List<Metadata.Builder>
         getDenomMetadataBuilderList() {
      return getDenomMetadataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Metadata, Metadata.Builder, MetadataOrBuilder>
        getDenomMetadataFieldBuilder() {
      if (denomMetadataBuilder_ == null) {
        denomMetadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Metadata, Metadata.Builder, MetadataOrBuilder>(
                denomMetadata_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        denomMetadata_ = null;
      }
      return denomMetadataBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:cosmos.bank.v1beta1.GenesisState)
  }

  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.GenesisState)
  private static final GenesisState DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GenesisState();
  }

  public static GenesisState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GenesisState>
      PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
    @Override
    public GenesisState parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GenesisState> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GenesisState> getParserForType() {
    return PARSER;
  }

  @Override
  public GenesisState getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

