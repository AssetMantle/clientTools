// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema/ids/base/anyID.v1.proto

package com.ids;

public interface AnyIDOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ids.AnyID)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.ids.AnyOwnableID any_ownable_i_d = 1 [json_name = "anyOwnableID"];</code>
   * @return Whether the anyOwnableID field is set.
   */
  boolean hasAnyOwnableID();
  /**
   * <code>.ids.AnyOwnableID any_ownable_i_d = 1 [json_name = "anyOwnableID"];</code>
   * @return The anyOwnableID.
   */
  AnyOwnableID getAnyOwnableID();
  /**
   * <code>.ids.AnyOwnableID any_ownable_i_d = 1 [json_name = "anyOwnableID"];</code>
   */
  AnyOwnableIDOrBuilder getAnyOwnableIDOrBuilder();

  /**
   * <code>.ids.AssetID asset_i_d = 2 [json_name = "assetID"];</code>
   * @return Whether the assetID field is set.
   */
  boolean hasAssetID();
  /**
   * <code>.ids.AssetID asset_i_d = 2 [json_name = "assetID"];</code>
   * @return The assetID.
   */
  AssetID getAssetID();
  /**
   * <code>.ids.AssetID asset_i_d = 2 [json_name = "assetID"];</code>
   */
  AssetIDOrBuilder getAssetIDOrBuilder();

  /**
   * <code>.ids.ClassificationID classification_i_d = 3 [json_name = "classificationID"];</code>
   * @return Whether the classificationID field is set.
   */
  boolean hasClassificationID();
  /**
   * <code>.ids.ClassificationID classification_i_d = 3 [json_name = "classificationID"];</code>
   * @return The classificationID.
   */
  ClassificationID getClassificationID();
  /**
   * <code>.ids.ClassificationID classification_i_d = 3 [json_name = "classificationID"];</code>
   */
  ClassificationIDOrBuilder getClassificationIDOrBuilder();

  /**
   * <code>.ids.DataID data_i_d = 4 [json_name = "dataID"];</code>
   * @return Whether the dataID field is set.
   */
  boolean hasDataID();
  /**
   * <code>.ids.DataID data_i_d = 4 [json_name = "dataID"];</code>
   * @return The dataID.
   */
  DataID getDataID();
  /**
   * <code>.ids.DataID data_i_d = 4 [json_name = "dataID"];</code>
   */
  DataIDOrBuilder getDataIDOrBuilder();

  /**
   * <code>.ids.HashID hash_i_d = 5 [json_name = "hashID"];</code>
   * @return Whether the hashID field is set.
   */
  boolean hasHashID();
  /**
   * <code>.ids.HashID hash_i_d = 5 [json_name = "hashID"];</code>
   * @return The hashID.
   */
  HashID getHashID();
  /**
   * <code>.ids.HashID hash_i_d = 5 [json_name = "hashID"];</code>
   */
  HashIDOrBuilder getHashIDOrBuilder();

  /**
   * <code>.ids.IdentityID identity_i_d = 6 [json_name = "identityID"];</code>
   * @return Whether the identityID field is set.
   */
  boolean hasIdentityID();
  /**
   * <code>.ids.IdentityID identity_i_d = 6 [json_name = "identityID"];</code>
   * @return The identityID.
   */
  IdentityID getIdentityID();
  /**
   * <code>.ids.IdentityID identity_i_d = 6 [json_name = "identityID"];</code>
   */
  IdentityIDOrBuilder getIdentityIDOrBuilder();

  /**
   * <code>.ids.MaintainerID maintainer_i_d = 7 [json_name = "maintainerID"];</code>
   * @return Whether the maintainerID field is set.
   */
  boolean hasMaintainerID();
  /**
   * <code>.ids.MaintainerID maintainer_i_d = 7 [json_name = "maintainerID"];</code>
   * @return The maintainerID.
   */
  MaintainerID getMaintainerID();
  /**
   * <code>.ids.MaintainerID maintainer_i_d = 7 [json_name = "maintainerID"];</code>
   */
  MaintainerIDOrBuilder getMaintainerIDOrBuilder();

  /**
   * <code>.ids.OrderID order_i_d = 8 [json_name = "orderID"];</code>
   * @return Whether the orderID field is set.
   */
  boolean hasOrderID();
  /**
   * <code>.ids.OrderID order_i_d = 8 [json_name = "orderID"];</code>
   * @return The orderID.
   */
  OrderID getOrderID();
  /**
   * <code>.ids.OrderID order_i_d = 8 [json_name = "orderID"];</code>
   */
  OrderIDOrBuilder getOrderIDOrBuilder();

  /**
   * <code>.ids.PropertyID property_i_d = 9 [json_name = "propertyID"];</code>
   * @return Whether the propertyID field is set.
   */
  boolean hasPropertyID();
  /**
   * <code>.ids.PropertyID property_i_d = 9 [json_name = "propertyID"];</code>
   * @return The propertyID.
   */
  PropertyID getPropertyID();
  /**
   * <code>.ids.PropertyID property_i_d = 9 [json_name = "propertyID"];</code>
   */
  PropertyIDOrBuilder getPropertyIDOrBuilder();

  /**
   * <code>.ids.SplitID split_i_d = 10 [json_name = "splitID"];</code>
   * @return Whether the splitID field is set.
   */
  boolean hasSplitID();
  /**
   * <code>.ids.SplitID split_i_d = 10 [json_name = "splitID"];</code>
   * @return The splitID.
   */
  SplitID getSplitID();
  /**
   * <code>.ids.SplitID split_i_d = 10 [json_name = "splitID"];</code>
   */
  SplitIDOrBuilder getSplitIDOrBuilder();

  /**
   * <code>.ids.StringID string_i_d = 11 [json_name = "stringID"];</code>
   * @return Whether the stringID field is set.
   */
  boolean hasStringID();
  /**
   * <code>.ids.StringID string_i_d = 11 [json_name = "stringID"];</code>
   * @return The stringID.
   */
  StringID getStringID();
  /**
   * <code>.ids.StringID string_i_d = 11 [json_name = "stringID"];</code>
   */
  StringIDOrBuilder getStringIDOrBuilder();

  AnyID.ImplCase getImplCase();
}
