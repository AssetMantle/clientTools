// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package com.ics23;

/**
 * <pre>
 *
 *InnerSpec contains all store-specific structure info to determine if two proofs from a
 *given store are neighbors.
 *
 *This enables:
 *
 * isLeftMost(spec: InnerSpec, op: InnerOp)
 * isRightMost(spec: InnerSpec, op: InnerOp)
 * isLeftNeighbor(spec: InnerSpec, left: InnerOp, right: InnerOp)
 * </pre>
 *
 * Protobuf type {@code ics23.InnerSpec}
 */
public final class InnerSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ics23.InnerSpec)
    InnerSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InnerSpec.newBuilder() to construct.
  private InnerSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InnerSpec() {
    childOrder_ = emptyIntList();
    emptyChild_ = com.google.protobuf.ByteString.EMPTY;
    hash_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new InnerSpec();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ProofsProto.internal_static_ics23_InnerSpec_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ProofsProto.internal_static_ics23_InnerSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            InnerSpec.class, Builder.class);
  }

  public static final int CHILD_ORDER_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList childOrder_;
  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
   * @return A list containing the childOrder.
   */
  @Override
  public java.util.List<Integer>
      getChildOrderList() {
    return childOrder_;
  }
  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
   * @return The count of childOrder.
   */
  public int getChildOrderCount() {
    return childOrder_.size();
  }
  /**
   * <pre>
   * Child order is the ordering of the children node, must count from 0
   * iavl tree is [0, 1] (left then right)
   * merk is [0, 2, 1] (left, right, here)
   * </pre>
   *
   * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
   * @param index The index of the element to return.
   * @return The childOrder at the given index.
   */
  public int getChildOrder(int index) {
    return childOrder_.getInt(index);
  }
  private int childOrderMemoizedSerializedSize = -1;

  public static final int CHILD_SIZE_FIELD_NUMBER = 2;
  private int childSize_ = 0;
  /**
   * <code>int32 child_size = 2 [json_name = "childSize"];</code>
   * @return The childSize.
   */
  @Override
  public int getChildSize() {
    return childSize_;
  }

  public static final int MIN_PREFIX_LENGTH_FIELD_NUMBER = 3;
  private int minPrefixLength_ = 0;
  /**
   * <code>int32 min_prefix_length = 3 [json_name = "minPrefixLength"];</code>
   * @return The minPrefixLength.
   */
  @Override
  public int getMinPrefixLength() {
    return minPrefixLength_;
  }

  public static final int MAX_PREFIX_LENGTH_FIELD_NUMBER = 4;
  private int maxPrefixLength_ = 0;
  /**
   * <code>int32 max_prefix_length = 4 [json_name = "maxPrefixLength"];</code>
   * @return The maxPrefixLength.
   */
  @Override
  public int getMaxPrefixLength() {
    return maxPrefixLength_;
  }

  public static final int EMPTY_CHILD_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString emptyChild_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
   * </pre>
   *
   * <code>bytes empty_child = 5 [json_name = "emptyChild"];</code>
   * @return The emptyChild.
   */
  @Override
  public com.google.protobuf.ByteString getEmptyChild() {
    return emptyChild_;
  }

  public static final int HASH_FIELD_NUMBER = 6;
  private int hash_ = 0;
  /**
   * <pre>
   * hash is the algorithm that must be used for each InnerOp
   * </pre>
   *
   * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
   * @return The enum numeric value on the wire for hash.
   */
  @Override public int getHashValue() {
    return hash_;
  }
  /**
   * <pre>
   * hash is the algorithm that must be used for each InnerOp
   * </pre>
   *
   * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
   * @return The hash.
   */
  @Override public HashOp getHash() {
    HashOp result = HashOp.forNumber(hash_);
    return result == null ? HashOp.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getChildOrderList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(childOrderMemoizedSerializedSize);
    }
    for (int i = 0; i < childOrder_.size(); i++) {
      output.writeInt32NoTag(childOrder_.getInt(i));
    }
    if (childSize_ != 0) {
      output.writeInt32(2, childSize_);
    }
    if (minPrefixLength_ != 0) {
      output.writeInt32(3, minPrefixLength_);
    }
    if (maxPrefixLength_ != 0) {
      output.writeInt32(4, maxPrefixLength_);
    }
    if (!emptyChild_.isEmpty()) {
      output.writeBytes(5, emptyChild_);
    }
    if (hash_ != HashOp.NO_HASH.getNumber()) {
      output.writeEnum(6, hash_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < childOrder_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(childOrder_.getInt(i));
      }
      size += dataSize;
      if (!getChildOrderList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      childOrderMemoizedSerializedSize = dataSize;
    }
    if (childSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, childSize_);
    }
    if (minPrefixLength_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, minPrefixLength_);
    }
    if (maxPrefixLength_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maxPrefixLength_);
    }
    if (!emptyChild_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, emptyChild_);
    }
    if (hash_ != HashOp.NO_HASH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, hash_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof InnerSpec)) {
      return super.equals(obj);
    }
    InnerSpec other = (InnerSpec) obj;

    if (!getChildOrderList()
        .equals(other.getChildOrderList())) return false;
    if (getChildSize()
        != other.getChildSize()) return false;
    if (getMinPrefixLength()
        != other.getMinPrefixLength()) return false;
    if (getMaxPrefixLength()
        != other.getMaxPrefixLength()) return false;
    if (!getEmptyChild()
        .equals(other.getEmptyChild())) return false;
    if (hash_ != other.hash_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getChildOrderCount() > 0) {
      hash = (37 * hash) + CHILD_ORDER_FIELD_NUMBER;
      hash = (53 * hash) + getChildOrderList().hashCode();
    }
    hash = (37 * hash) + CHILD_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getChildSize();
    hash = (37 * hash) + MIN_PREFIX_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + getMinPrefixLength();
    hash = (37 * hash) + MAX_PREFIX_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPrefixLength();
    hash = (37 * hash) + EMPTY_CHILD_FIELD_NUMBER;
    hash = (53 * hash) + getEmptyChild().hashCode();
    hash = (37 * hash) + HASH_FIELD_NUMBER;
    hash = (53 * hash) + hash_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static InnerSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InnerSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static InnerSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static InnerSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static InnerSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InnerSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(InnerSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *
   *InnerSpec contains all store-specific structure info to determine if two proofs from a
   *given store are neighbors.
   *
   *This enables:
   *
   * isLeftMost(spec: InnerSpec, op: InnerOp)
   * isRightMost(spec: InnerSpec, op: InnerOp)
   * isLeftNeighbor(spec: InnerSpec, left: InnerOp, right: InnerOp)
   * </pre>
   *
   * Protobuf type {@code ics23.InnerSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ics23.InnerSpec)
      InnerSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProofsProto.internal_static_ics23_InnerSpec_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProofsProto.internal_static_ics23_InnerSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InnerSpec.class, Builder.class);
    }

    // Construct using com.ics23.InnerSpec.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      childOrder_ = emptyIntList();
      childSize_ = 0;
      minPrefixLength_ = 0;
      maxPrefixLength_ = 0;
      emptyChild_ = com.google.protobuf.ByteString.EMPTY;
      hash_ = 0;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ProofsProto.internal_static_ics23_InnerSpec_descriptor;
    }

    @Override
    public InnerSpec getDefaultInstanceForType() {
      return InnerSpec.getDefaultInstance();
    }

    @Override
    public InnerSpec build() {
      InnerSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public InnerSpec buildPartial() {
      InnerSpec result = new InnerSpec(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(InnerSpec result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        childOrder_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.childOrder_ = childOrder_;
    }

    private void buildPartial0(InnerSpec result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.childSize_ = childSize_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minPrefixLength_ = minPrefixLength_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxPrefixLength_ = maxPrefixLength_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.emptyChild_ = emptyChild_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.hash_ = hash_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof InnerSpec) {
        return mergeFrom((InnerSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(InnerSpec other) {
      if (other == InnerSpec.getDefaultInstance()) return this;
      if (!other.childOrder_.isEmpty()) {
        if (childOrder_.isEmpty()) {
          childOrder_ = other.childOrder_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureChildOrderIsMutable();
          childOrder_.addAll(other.childOrder_);
        }
        onChanged();
      }
      if (other.getChildSize() != 0) {
        setChildSize(other.getChildSize());
      }
      if (other.getMinPrefixLength() != 0) {
        setMinPrefixLength(other.getMinPrefixLength());
      }
      if (other.getMaxPrefixLength() != 0) {
        setMaxPrefixLength(other.getMaxPrefixLength());
      }
      if (other.getEmptyChild() != com.google.protobuf.ByteString.EMPTY) {
        setEmptyChild(other.getEmptyChild());
      }
      if (other.hash_ != 0) {
        setHashValue(other.getHashValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int v = input.readInt32();
              ensureChildOrderIsMutable();
              childOrder_.addInt(v);
              break;
            } // case 8
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureChildOrderIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                childOrder_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 10
            case 16: {
              childSize_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              minPrefixLength_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              maxPrefixLength_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              emptyChild_ = input.readBytes();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              hash_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.IntList childOrder_ = emptyIntList();
    private void ensureChildOrderIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        childOrder_ = mutableCopy(childOrder_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @return A list containing the childOrder.
     */
    public java.util.List<Integer>
        getChildOrderList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(childOrder_) : childOrder_;
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @return The count of childOrder.
     */
    public int getChildOrderCount() {
      return childOrder_.size();
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @param index The index of the element to return.
     * @return The childOrder at the given index.
     */
    public int getChildOrder(int index) {
      return childOrder_.getInt(index);
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @param index The index to set the value at.
     * @param value The childOrder to set.
     * @return This builder for chaining.
     */
    public Builder setChildOrder(
        int index, int value) {

      ensureChildOrderIsMutable();
      childOrder_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @param value The childOrder to add.
     * @return This builder for chaining.
     */
    public Builder addChildOrder(int value) {

      ensureChildOrderIsMutable();
      childOrder_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @param values The childOrder to add.
     * @return This builder for chaining.
     */
    public Builder addAllChildOrder(
        Iterable<? extends Integer> values) {
      ensureChildOrderIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, childOrder_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Child order is the ordering of the children node, must count from 0
     * iavl tree is [0, 1] (left then right)
     * merk is [0, 2, 1] (left, right, here)
     * </pre>
     *
     * <code>repeated int32 child_order = 1 [json_name = "childOrder"];</code>
     * @return This builder for chaining.
     */
    public Builder clearChildOrder() {
      childOrder_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private int childSize_ ;
    /**
     * <code>int32 child_size = 2 [json_name = "childSize"];</code>
     * @return The childSize.
     */
    @Override
    public int getChildSize() {
      return childSize_;
    }
    /**
     * <code>int32 child_size = 2 [json_name = "childSize"];</code>
     * @param value The childSize to set.
     * @return This builder for chaining.
     */
    public Builder setChildSize(int value) {

      childSize_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 child_size = 2 [json_name = "childSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearChildSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      childSize_ = 0;
      onChanged();
      return this;
    }

    private int minPrefixLength_ ;
    /**
     * <code>int32 min_prefix_length = 3 [json_name = "minPrefixLength"];</code>
     * @return The minPrefixLength.
     */
    @Override
    public int getMinPrefixLength() {
      return minPrefixLength_;
    }
    /**
     * <code>int32 min_prefix_length = 3 [json_name = "minPrefixLength"];</code>
     * @param value The minPrefixLength to set.
     * @return This builder for chaining.
     */
    public Builder setMinPrefixLength(int value) {

      minPrefixLength_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 min_prefix_length = 3 [json_name = "minPrefixLength"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinPrefixLength() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minPrefixLength_ = 0;
      onChanged();
      return this;
    }

    private int maxPrefixLength_ ;
    /**
     * <code>int32 max_prefix_length = 4 [json_name = "maxPrefixLength"];</code>
     * @return The maxPrefixLength.
     */
    @Override
    public int getMaxPrefixLength() {
      return maxPrefixLength_;
    }
    /**
     * <code>int32 max_prefix_length = 4 [json_name = "maxPrefixLength"];</code>
     * @param value The maxPrefixLength to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPrefixLength(int value) {

      maxPrefixLength_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_prefix_length = 4 [json_name = "maxPrefixLength"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxPrefixLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxPrefixLength_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString emptyChild_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
     * </pre>
     *
     * <code>bytes empty_child = 5 [json_name = "emptyChild"];</code>
     * @return The emptyChild.
     */
    @Override
    public com.google.protobuf.ByteString getEmptyChild() {
      return emptyChild_;
    }
    /**
     * <pre>
     * empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
     * </pre>
     *
     * <code>bytes empty_child = 5 [json_name = "emptyChild"];</code>
     * @param value The emptyChild to set.
     * @return This builder for chaining.
     */
    public Builder setEmptyChild(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      emptyChild_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
     * </pre>
     *
     * <code>bytes empty_child = 5 [json_name = "emptyChild"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEmptyChild() {
      bitField0_ = (bitField0_ & ~0x00000010);
      emptyChild_ = getDefaultInstance().getEmptyChild();
      onChanged();
      return this;
    }

    private int hash_ = 0;
    /**
     * <pre>
     * hash is the algorithm that must be used for each InnerOp
     * </pre>
     *
     * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
     * @return The enum numeric value on the wire for hash.
     */
    @Override public int getHashValue() {
      return hash_;
    }
    /**
     * <pre>
     * hash is the algorithm that must be used for each InnerOp
     * </pre>
     *
     * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
     * @param value The enum numeric value on the wire for hash to set.
     * @return This builder for chaining.
     */
    public Builder setHashValue(int value) {
      hash_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * hash is the algorithm that must be used for each InnerOp
     * </pre>
     *
     * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
     * @return The hash.
     */
    @Override
    public HashOp getHash() {
      HashOp result = HashOp.forNumber(hash_);
      return result == null ? HashOp.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * hash is the algorithm that must be used for each InnerOp
     * </pre>
     *
     * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
     * @param value The hash to set.
     * @return This builder for chaining.
     */
    public Builder setHash(HashOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      hash_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * hash is the algorithm that must be used for each InnerOp
     * </pre>
     *
     * <code>.ics23.HashOp hash = 6 [json_name = "hash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHash() {
      bitField0_ = (bitField0_ & ~0x00000020);
      hash_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ics23.InnerSpec)
  }

  // @@protoc_insertion_point(class_scope:ics23.InnerSpec)
  private static final InnerSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new InnerSpec();
  }

  public static InnerSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InnerSpec>
      PARSER = new com.google.protobuf.AbstractParser<InnerSpec>() {
    @Override
    public InnerSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<InnerSpec> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<InnerSpec> getParserForType() {
    return PARSER;
  }

  @Override
  public InnerSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

