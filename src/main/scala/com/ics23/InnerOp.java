// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package com.ics23;

/**
 * <pre>
 *
 *InnerOp represents a merkle-proof step that is not a leaf.
 *It represents concatenating two children and hashing them to provide the next result.
 *
 *The result of the previous step is passed in, so the signature of this op is:
 * innerOp(child) -&gt; output
 *
 *The result of applying InnerOp should be:
 * output = op.hash(op.prefix || child || op.suffix)
 *
 * where the || operator is concatenation of binary data,
 *and child is the result of hashing all the tree below this step.
 *
 *Any special data, like prepending child with the length, or prepending the entire operation with
 *some value to differentiate from leaf nodes, should be included in prefix and suffix.
 *If either of prefix or suffix is empty, we just treat it as an empty string
 * </pre>
 *
 * Protobuf type {@code ics23.InnerOp}
 */
public final class InnerOp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ics23.InnerOp)
    InnerOpOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InnerOp.newBuilder() to construct.
  private InnerOp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InnerOp() {
    hash_ = 0;
    prefix_ = com.google.protobuf.ByteString.EMPTY;
    suffix_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new InnerOp();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ProofsProto.internal_static_ics23_InnerOp_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ProofsProto.internal_static_ics23_InnerOp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            InnerOp.class, Builder.class);
  }

  public static final int HASH_FIELD_NUMBER = 1;
  private int hash_ = 0;
  /**
   * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
   * @return The enum numeric value on the wire for hash.
   */
  @Override public int getHashValue() {
    return hash_;
  }
  /**
   * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
   * @return The hash.
   */
  @Override public HashOp getHash() {
    HashOp result = HashOp.forNumber(hash_);
    return result == null ? HashOp.UNRECOGNIZED : result;
  }

  public static final int PREFIX_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString prefix_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes prefix = 2 [json_name = "prefix"];</code>
   * @return The prefix.
   */
  @Override
  public com.google.protobuf.ByteString getPrefix() {
    return prefix_;
  }

  public static final int SUFFIX_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString suffix_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes suffix = 3 [json_name = "suffix"];</code>
   * @return The suffix.
   */
  @Override
  public com.google.protobuf.ByteString getSuffix() {
    return suffix_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hash_ != HashOp.NO_HASH.getNumber()) {
      output.writeEnum(1, hash_);
    }
    if (!prefix_.isEmpty()) {
      output.writeBytes(2, prefix_);
    }
    if (!suffix_.isEmpty()) {
      output.writeBytes(3, suffix_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hash_ != HashOp.NO_HASH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, hash_);
    }
    if (!prefix_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, prefix_);
    }
    if (!suffix_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, suffix_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof InnerOp)) {
      return super.equals(obj);
    }
    InnerOp other = (InnerOp) obj;

    if (hash_ != other.hash_) return false;
    if (!getPrefix()
        .equals(other.getPrefix())) return false;
    if (!getSuffix()
        .equals(other.getSuffix())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HASH_FIELD_NUMBER;
    hash = (53 * hash) + hash_;
    hash = (37 * hash) + PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getPrefix().hashCode();
    hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
    hash = (53 * hash) + getSuffix().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static InnerOp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerOp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerOp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerOp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerOp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InnerOp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InnerOp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InnerOp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static InnerOp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static InnerOp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static InnerOp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InnerOp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(InnerOp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *
   *InnerOp represents a merkle-proof step that is not a leaf.
   *It represents concatenating two children and hashing them to provide the next result.
   *
   *The result of the previous step is passed in, so the signature of this op is:
   * innerOp(child) -&gt; output
   *
   *The result of applying InnerOp should be:
   * output = op.hash(op.prefix || child || op.suffix)
   *
   * where the || operator is concatenation of binary data,
   *and child is the result of hashing all the tree below this step.
   *
   *Any special data, like prepending child with the length, or prepending the entire operation with
   *some value to differentiate from leaf nodes, should be included in prefix and suffix.
   *If either of prefix or suffix is empty, we just treat it as an empty string
   * </pre>
   *
   * Protobuf type {@code ics23.InnerOp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ics23.InnerOp)
      InnerOpOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProofsProto.internal_static_ics23_InnerOp_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProofsProto.internal_static_ics23_InnerOp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InnerOp.class, Builder.class);
    }

    // Construct using com.ics23.InnerOp.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hash_ = 0;
      prefix_ = com.google.protobuf.ByteString.EMPTY;
      suffix_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ProofsProto.internal_static_ics23_InnerOp_descriptor;
    }

    @Override
    public InnerOp getDefaultInstanceForType() {
      return InnerOp.getDefaultInstance();
    }

    @Override
    public InnerOp build() {
      InnerOp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public InnerOp buildPartial() {
      InnerOp result = new InnerOp(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(InnerOp result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hash_ = hash_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.prefix_ = prefix_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.suffix_ = suffix_;
      }
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof InnerOp) {
        return mergeFrom((InnerOp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(InnerOp other) {
      if (other == InnerOp.getDefaultInstance()) return this;
      if (other.hash_ != 0) {
        setHashValue(other.getHashValue());
      }
      if (other.getPrefix() != com.google.protobuf.ByteString.EMPTY) {
        setPrefix(other.getPrefix());
      }
      if (other.getSuffix() != com.google.protobuf.ByteString.EMPTY) {
        setSuffix(other.getSuffix());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              hash_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              prefix_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              suffix_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int hash_ = 0;
    /**
     * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
     * @return The enum numeric value on the wire for hash.
     */
    @Override public int getHashValue() {
      return hash_;
    }
    /**
     * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
     * @param value The enum numeric value on the wire for hash to set.
     * @return This builder for chaining.
     */
    public Builder setHashValue(int value) {
      hash_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
     * @return The hash.
     */
    @Override
    public HashOp getHash() {
      HashOp result = HashOp.forNumber(hash_);
      return result == null ? HashOp.UNRECOGNIZED : result;
    }
    /**
     * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
     * @param value The hash to set.
     * @return This builder for chaining.
     */
    public Builder setHash(HashOp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      hash_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.ics23.HashOp hash = 1 [json_name = "hash"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHash() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hash_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString prefix_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes prefix = 2 [json_name = "prefix"];</code>
     * @return The prefix.
     */
    @Override
    public com.google.protobuf.ByteString getPrefix() {
      return prefix_;
    }
    /**
     * <code>bytes prefix = 2 [json_name = "prefix"];</code>
     * @param value The prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefix(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      prefix_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>bytes prefix = 2 [json_name = "prefix"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefix() {
      bitField0_ = (bitField0_ & ~0x00000002);
      prefix_ = getDefaultInstance().getPrefix();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString suffix_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes suffix = 3 [json_name = "suffix"];</code>
     * @return The suffix.
     */
    @Override
    public com.google.protobuf.ByteString getSuffix() {
      return suffix_;
    }
    /**
     * <code>bytes suffix = 3 [json_name = "suffix"];</code>
     * @param value The suffix to set.
     * @return This builder for chaining.
     */
    public Builder setSuffix(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      suffix_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>bytes suffix = 3 [json_name = "suffix"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSuffix() {
      bitField0_ = (bitField0_ & ~0x00000004);
      suffix_ = getDefaultInstance().getSuffix();
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ics23.InnerOp)
  }

  // @@protoc_insertion_point(class_scope:ics23.InnerOp)
  private static final InnerOp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new InnerOp();
  }

  public static InnerOp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InnerOp>
      PARSER = new com.google.protobuf.AbstractParser<InnerOp>() {
    @Override
    public InnerOp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<InnerOp> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<InnerOp> getParserForType() {
    return PARSER;
  }

  @Override
  public InnerOp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

